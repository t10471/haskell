VimShellInteractive ghci -no-user-package-db -package-db /root/workspace/misc-example/.cabal-sandbox/x86_64-linux-ghc-7.8.4-packages.conf.d

misc-example1.hs
    mono-traversable
    mono-traversable は、型族を使うことで Functor、Foldable、Traversable の概念を一般化し、
    単相的な型も多相的な型も扱えるようにしている

misc-example2.hs
    semigroups(半群)の NonEmpty

misc-example3.hs
    ファンクタ関連

algebra1.hs
algebra2.hs
algebra3.hs
    再帰
    http://maoe.hatenadiary.jp/entry/20090820/1250782646
    http://hackage.haskell.org/package/recursion-schemes-4.1/docs/Data-Functor-Foldable.html
    https://github.com/Kinokkory/wiwinwlh-jp/wiki/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%97%E3%83%AA%E3%82%BF#interpreters
    https://wiki.haskell.org/Catamorphisms
    http://d.hatena.ne.jp/KeisukeNakano/200903

algebra4.hs
    Data.Functor.Foldableを使ったサンプル

polykinds1.hs
    https://www.fpcomplete.com/user/philfreeman/polykinded-folds
    PolyKindsを使ったファンクタ

void.hs
    Data.Voidのサンプル

kind1.hs
    ProxyによるPolyKindsの例とskiコンビネーターの定義
    色々なカインドのnewType定義
kind2.hs
    TypeFamiliesとDataKindsを使ったBool
    Notの実装
kind3.hs
    長さを持つ配列、空かわかる配列
kind4.hs
    TypeListsを使った型レベル数値
    型レベルの等号
    Proxy
kind5.hs
    Singの実装
    Singは型に対して値が1つしかないものを作る
    型演算
kind6.hs
    GHC.TypeLitsのnatVal,symbolValの使い方
kind7.hs
    型演算の色々なサンプル
kind8.hs
    型をラベルとして使うサンプル
kind9.hs
    型をラベルとして使うサンプルのレコード版
kindA.hs
    ヘテロリスト
kindB.hs
    ヘテロリストのShow制限
kindC.hs
    型でMapのindexを実装
kindD.hs
    型配列のreverse
    型演算に数学的な法則がないのでSingを使って自分で定義する必要がある

https://github.com/Kinokkory/wiwinwlh-jp/wiki/%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%82%AF%E3%82%B9#generics
generics1.hs
    Data.Typeableのサンプル
generics2.hs
    Data.Dataのサンプル
generics3.hs
    GHC.Genericsのサンプル
generics4.hs
    hasableを使ったハッシュ関数の導出
    cerealを使ったバイナリの導出
    aesonを使ったjsonの導出
generics5.hs
    uniplateのUniplateを使ったサンプル
    よくわからない・・・
generics6.hs
    uniplateのBiplateを使ったサンプル
    よくわからない・・・

fib1.hs
    メモ化について

misc.hs
    制約のサンプルだけどうまくいかない

MaxOccurs/MaxOccurs.hs
    GHCの構文解析の仕組み
